// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  MASTER
}

enum ScheduleStatus {
  FREE
  BOOKED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Contact {
  id     String @id @default(uuid())
  name   String
  value  String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  hashedPassword String
  name           String?
  role           UserRole  @default(USER)
  contact        Contact[]
  master         Master?
  bookings       Booking[]
  createdAt      DateTime  @default(now())
}

model Master {
  id         String  @id @default(uuid())
  userId     String  @unique
  user       User    @relation(fields: [userId], references: [id])
  profession String?
  bio        String?

  schedules Schedule[]
  bookings  Booking[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Schedule {
  id        String         @id @default(uuid())
  masterId  String
  master    Master         @relation(fields: [masterId], references: [id])
  startTime DateTime
  endTime   DateTime
  status    ScheduleStatus @default(FREE)
  booking   Booking?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Booking {
  id         String         @id @default(uuid())
  userId     String
  user       User           @relation(fields: [userId], references: [id])
  scheduleId String         @unique
  schedule   Schedule       @relation(fields: [scheduleId], references: [id])
  masterId   String
  master     Master         @relation(fields: [masterId], references: [id])
  status     BookingStatus? @default(PENDING)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}
